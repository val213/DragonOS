#![allow(dead_code)]
// Hierarchical metaflags
const SDF_SHARED_CHILD: u32 = 0x1;
const SDF_SHARED_PARENT: u32 = 0x2;

// Behavioural metaflags
const SDF_NEEDS_GROUPS: u32 = 0x4;

// SD_FLAG definitions
const SD_BALANCE_NEWIDLE: u32 = SDF_SHARED_CHILD | SDF_NEEDS_GROUPS;
const SD_BALANCE_EXEC: u32 = SDF_SHARED_CHILD | SDF_NEEDS_GROUPS;
const SD_BALANCE_FORK: u32 = SDF_SHARED_CHILD | SDF_NEEDS_GROUPS;
const SD_BALANCE_WAKE: u32 = SDF_SHARED_CHILD | SDF_NEEDS_GROUPS;
const SD_WAKE_AFFINE: u32 = SDF_SHARED_CHILD;
const SD_ASYM_CPUCAPACITY: u32 = SDF_SHARED_PARENT | SDF_NEEDS_GROUPS;
const SD_ASYM_CPUCAPACITY_FULL: u32 = SDF_SHARED_PARENT | SDF_NEEDS_GROUPS;
const SD_SHARE_CPUCAPACITY: u32 = SDF_SHARED_CHILD | SDF_NEEDS_GROUPS;
const SD_SHARE_PKG_RESOURCES: u32 = SDF_SHARED_CHILD | SDF_NEEDS_GROUPS;
const SD_SERIALIZE: u32 = SDF_SHARED_PARENT | SDF_NEEDS_GROUPS;
const SD_ASYM_PACKING: u32 = SDF_NEEDS_GROUPS;
const SD_PREFER_SIBLING: u32 = SDF_NEEDS_GROUPS;
const SD_OVERLAP: u32 = SDF_SHARED_PARENT | SDF_NEEDS_GROUPS;
const SD_NUMA: u32 = SDF_SHARED_PARENT | SDF_NEEDS_GROUPS;


